plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'ca.bc.gov.preference'
    compileSdk versions.compileSdkVersion

    defaultConfig {
        minSdk versions.minSdkVersion
        targetSdk versions.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {

        mock {
            dimension "version"
        }
        dev {
            dimension "version"
        }

        stage {
            dimension "version"
        }

        prod {
            dimension "version"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$versions.core_ktx"

    implementation project(path: ':common')

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines")

    //dagger hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    //jetpack security
    implementation "androidx.security:security-crypto:$versions.crypto"

    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.ext_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.androidx_test"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
}