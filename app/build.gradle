plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "ca.bc.gov.myhealth"
        minSdk 27
        targetSdk 31
        versionCode 9
        versionName "1.0.8"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {

        dev {
            dimension "version"
            versionNameSuffix "-dev"
        }
        stage {
            dimension "version"
            versionNameSuffix "-stage"
        }

        prod {
            dimension "version"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$versions.core_ktx"

    implementation "androidx.appcompat:appcompat:$versions.appcompat"

    implementation "com.google.android.material:material:$versions.material"

    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipe_refresh_layout"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"

    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    implementation "androidx.navigation:navigation-runtime-ktx:$versions.navigation"

    //JatPack LiveData ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.viewmodel"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.livedata"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"

    //Dagger Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    //ROOM
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"

    //Google BarcodeScanner
    //TODO:- we may replace it with dynamic model download library
    //implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:16.2.1'
    implementation "com.google.mlkit:barcode-scanning:$versions.barcode_scanning"

    //Camerax
    //TODO: decide on usage of lifecycle, view and extensions lib
    implementation "androidx.camera:camera-camera2:${versions.camerax}"

    implementation "androidx.camera:camera-lifecycle:${versions.camerax}"

    implementation "androidx.camera:camera-view:$versions.camerax_view"

    implementation "androidx.camera:camera-extensions:$versions.camerax_extensions"

    //GSOn
    implementation "com.google.code.gson:gson:$versions.gson"

    //JWT library
    api "io.jsonwebtoken:jjwt-api:$versions.jjwt"
    implementation "io.jsonwebtoken:jjwt-impl:$versions.jjwt"
    implementation("io.jsonwebtoken:jjwt-orgjson:$versions.jjwt") {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }

    implementation "org.bouncycastle:bcprov-jdk15on:$versions.bouncycastle"

    implementation "androidx.browser:browser:$versions.browser"

    implementation "com.google.android.play:core-ktx:$versions.play"

    //networking
    implementation "com.google.code.gson:gson:$versions.gson"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.converter_gson"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor"

    //Queue.it
    implementation "com.queue-it.androidsdk:library-androidx:$versions.queue_it"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:$versions.datastore"

    // Snowplow Android Tracker
    implementation "com.snowplowanalytics:snowplow-android-tracker:$versions.snowplow@aar"
    // In case 'lifecycleAutotracking' is enabled
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.snowplow_lifecycle"

    //Crypto
    implementation "androidx.security:security-crypto:$versions.crypto"

    // https://stackoverflow.com/questions/29402155/android-unit-test-not-mocked
    testImplementation 'org.json:json:20210307'

    testImplementation "junit:junit:$versions.junit"

    androidTestImplementation "androidx.test.ext:junit:$versions.ext_junit"

    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"

    //Dagger Hilt
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hilt"

    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$versions.hilt"
}